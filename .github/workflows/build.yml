name: Build & Release

on:
  push:
    tags:
      - v**
  pull_request:

jobs:
  prebuild:
    uses: "./.github/workflows/prebuild.yml"
  build:
    needs: prebuild
    name: Build (${{ matrix.os }} - ${{ matrix.arch }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # https://github.com/electron/electron-packager/blob/ebcbd439ff3e0f6f92fa880ff28a8670a9bcf2ab/src/targets.js#L9
        # 32-bit Linux unsupported as of 2019: https://www.electronjs.org/blog/linux-32bit-support
        os: [ macOS-latest, ubuntu-latest, windows-latest ]
        arch: [ x64, arm64 ]
        include:
        - os: windows-latest
          arch: ia32
        - os: ubuntu-latest
          arch: armv7l
        # Publishing artifacts for multiple Windows architectures has
        # a bug which can cause the wrong architecture to be downloaded
        # for an update, so until that is fixed, only build Windows x64
        exclude:
        - os: windows-latest
          arch: arm64
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3.5.1
        with:
          node-version: 18.x
          cache: npm

      - name: Install dependencies
        run: npm ci
        env:
          DEBUG: electron-builder

      - name: Set MacOS signing certs
        if: matrix.os == 'macOS-latest' && startsWith(github.ref, 'refs/tags/')
        run: chmod +x scripts/add-osx-cert.sh && ./scripts/add-osx-cert.sh
        env:
          CERTIFICATE_OSX_APPLICATION: ${{ secrets.CERTIFICATE_OSX_APPLICATION }}
          CERTIFICATE_PASSWORD: ${{ secrets.CERTIFICATE_PASSWORD }}

      - name: Make MacOS build
        if: matrix.os == 'macOS-latest'
        run: npm run build:mac -- --${{ matrix.arch }}
        env:
          OS: macOS
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}
          DISABLE_SIGN_AND_NOTARIZE: ${{ !startsWith(github.ref, 'refs/tags/') }}

      - name: Make Windows build
        if: matrix.os == 'windows-latest'
        run: npm run build:win -- --${{ matrix.arch }}
        env:
          OS: windows

      - name: Make Linux build
        if: matrix.os == 'ubuntu-latest'
        run: npm run build:linux -- --${{ matrix.arch }}
        env:
          OS: linux

      - name: Upload Build Artifacts
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v3.1.1
        with:
          name: Builds
          path: |
            release/**/*.dmg
            release/**/*.exe
            release/**/*.AppImage
            release/**/*.deb
            release/**/*.rpm
          retention-days: 7

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          draft: true
          files: |
            release/**/*.dmg
            release/**/*.exe
            release/**/*.AppImage
            release/**/*.deb
            release/**/*.rpm
